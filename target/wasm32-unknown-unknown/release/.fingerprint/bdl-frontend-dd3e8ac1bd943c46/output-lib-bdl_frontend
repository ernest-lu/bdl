{"$message_type":"diagnostic","message":"unused import: `crate::ast::StringLiteral`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":378,"byte_end":403,"line_start":19,"line_end":19,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use crate::ast::StringLiteral;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":374,"byte_end":405,"line_start":19,"line_end":20,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::ast::StringLiteral;","highlight_start":1,"highlight_end":31},{"text":"use crate::ast::TypedIdentifier;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::ast::StringLiteral`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/parser.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::ast::StringLiteral;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around `if` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1627,"byte_end":1628,"line_start":49,"line_end":49,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (inner.len() >= 1) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1644,"byte_end":1645,"line_start":49,"line_end":49,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"            if (inner.len() >= 1) {","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1627,"byte_end":1628,"line_start":49,"line_end":49,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (inner.len() >= 1) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1644,"byte_end":1645,"line_start":49,"line_end":49,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"            if (inner.len() >= 1) {","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around `if` condition\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/parser.rs:49:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if (inner.len() >= 1) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            if \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0minner.len() >= 1\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            if inner.len() >= 1 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `fd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":8395,"byte_end":8397,"line_start":415,"line_end":415,"column_start":31,"column_end":33,"is_primary":true,"text":[{"text":"            Expr::FunctionDef(fd) => todo!(),","highlight_start":31,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":8395,"byte_end":8397,"line_start":415,"line_end":415,"column_start":31,"column_end":33,"is_primary":true,"text":[{"text":"            Expr::FunctionDef(fd) => todo!(),","highlight_start":31,"highlight_end":33}],"label":null,"suggested_replacement":"_fd","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `fd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:415:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Expr::FunctionDef(fd) => todo!(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_fd`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `exprs`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9107,"byte_end":9112,"line_start":441,"line_end":441,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"            AstNode::VecExpr(exprs) => todo!(),","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9107,"byte_end":9112,"line_start":441,"line_end":441,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"            AstNode::VecExpr(exprs) => todo!(),","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":"_exprs","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `exprs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:441:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m441\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            AstNode::VecExpr(exprs) => todo!(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_exprs`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1084,"byte_end":1098,"line_start":36,"line_end":36,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"            let mut type_of_id = build_ast_from_expr(inner_nodes.pop()?)?.Type()?;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1084,"byte_end":1088,"line_start":36,"line_end":36,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut type_of_id = build_ast_from_expr(inner_nodes.pop()?)?.Type()?;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/parser.rs:36:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut type_of_id = build_ast_from_expr(inner_nodes.pop()?)?.Type()?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1167,"byte_end":1173,"line_start":37,"line_end":37,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let mut id = build_ast_from_expr(inner_nodes.pop()?)?","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/parser.rs","byte_start":1167,"byte_end":1171,"line_start":37,"line_end":37,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut id = build_ast_from_expr(inner_nodes.pop()?)?","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/parser.rs:37:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut id = build_ast_from_expr(inner_nodes.pop()?)?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"trait `ExprNode` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":464,"byte_end":472,"line_start":28,"line_end":28,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"trait ExprNode {","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait `ExprNode` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:28:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtrait ExprNode {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Integer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5159,"byte_end":5166,"line_start":276,"line_end":276,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn Integer(self) -> Option<IntegerLiteral> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5159,"byte_end":5166,"line_start":276,"line_end":276,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn Integer(self) -> Option<IntegerLiteral> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"integer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Integer` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:276:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Integer(self) -> Option<IntegerLiteral> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `integer`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Boolean` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5324,"byte_end":5331,"line_start":284,"line_end":284,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn Boolean(self) -> Option<BooleanLiteral> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5324,"byte_end":5331,"line_start":284,"line_end":284,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn Boolean(self) -> Option<BooleanLiteral> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"boolean","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Boolean` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:284:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Boolean(self) -> Option<BooleanLiteral> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `boolean`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Float` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5489,"byte_end":5494,"line_start":292,"line_end":292,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn Float(self) -> Option<FloatLiteral> {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5489,"byte_end":5494,"line_start":292,"line_end":292,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn Float(self) -> Option<FloatLiteral> {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":"float","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Float` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:292:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Float(self) -> Option<FloatLiteral> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `float`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `String` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5648,"byte_end":5654,"line_start":300,"line_end":300,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn String(self) -> Option<StringLiteral> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5648,"byte_end":5654,"line_start":300,"line_end":300,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn String(self) -> Option<StringLiteral> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `String` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:300:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn String(self) -> Option<StringLiteral> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `string`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Identifier` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5810,"byte_end":5820,"line_start":308,"line_end":308,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn Identifier(self) -> Option<Identifier> {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5810,"byte_end":5820,"line_start":308,"line_end":308,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn Identifier(self) -> Option<Identifier> {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"identifier","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Identifier` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:308:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Identifier(self) -> Option<Identifier> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `identifier`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `AssignmentExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5977,"byte_end":5991,"line_start":316,"line_end":316,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn AssignmentExpr(self) -> Option<AssignmentExpr> {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":5977,"byte_end":5991,"line_start":316,"line_end":316,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn AssignmentExpr(self) -> Option<AssignmentExpr> {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":"assignment_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `AssignmentExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:316:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AssignmentExpr(self) -> Option<AssignmentExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `assignment_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `ReassignmentExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6156,"byte_end":6172,"line_start":324,"line_end":324,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn ReassignmentExpr(self) -> Option<ReassignmentExpr> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6156,"byte_end":6172,"line_start":324,"line_end":324,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn ReassignmentExpr(self) -> Option<ReassignmentExpr> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"reassignment_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ReassignmentExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:324:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ReassignmentExpr(self) -> Option<ReassignmentExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reassignment_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `MethodCallExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6341,"byte_end":6355,"line_start":332,"line_end":332,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn MethodCallExpr(self) -> Option<MethodCallExpr> {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6341,"byte_end":6355,"line_start":332,"line_end":332,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn MethodCallExpr(self) -> Option<MethodCallExpr> {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":"method_call_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MethodCallExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:332:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MethodCallExpr(self) -> Option<MethodCallExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `method_call_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `PrintExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6520,"byte_end":6529,"line_start":340,"line_end":340,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn PrintExpr(self) -> Option<PrintExpr> {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6520,"byte_end":6529,"line_start":340,"line_end":340,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn PrintExpr(self) -> Option<PrintExpr> {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"print_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `PrintExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:340:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PrintExpr(self) -> Option<PrintExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `IfExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6684,"byte_end":6690,"line_start":348,"line_end":348,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn IfExpr(self) -> Option<IfExpr> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6684,"byte_end":6690,"line_start":348,"line_end":348,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn IfExpr(self) -> Option<IfExpr> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"if_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `IfExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:348:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn IfExpr(self) -> Option<IfExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `if_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `RepExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6839,"byte_end":6846,"line_start":356,"line_end":356,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RepExpr(self) -> Option<RepExpr> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6839,"byte_end":6846,"line_start":356,"line_end":356,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RepExpr(self) -> Option<RepExpr> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"rep_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RepExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:356:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RepExpr(self) -> Option<RepExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rep_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `BinOp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6997,"byte_end":7002,"line_start":364,"line_end":364,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn BinOp(self) -> Option<BinOpExpr> {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":6997,"byte_end":7002,"line_start":364,"line_end":364,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn BinOp(self) -> Option<BinOpExpr> {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":"bin_op","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `BinOp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:364:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn BinOp(self) -> Option<BinOpExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bin_op`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `UnOp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":7153,"byte_end":7157,"line_start":372,"line_end":372,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn UnOp(self) -> Option<UnOpExpr> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":7153,"byte_end":7157,"line_start":372,"line_end":372,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn UnOp(self) -> Option<UnOpExpr> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"un_op","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `UnOp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:372:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn UnOp(self) -> Option<UnOpExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `un_op`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `FunctionDef` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":7306,"byte_end":7317,"line_start":380,"line_end":380,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn FunctionDef(self) -> Option<FunctionDef> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":7306,"byte_end":7317,"line_start":380,"line_end":380,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn FunctionDef(self) -> Option<FunctionDef> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"function_def","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FunctionDef` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:380:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FunctionDef(self) -> Option<FunctionDef> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `function_def`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `NoneExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":7476,"byte_end":7484,"line_start":388,"line_end":388,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn NoneExpr(self) -> Option<NoneExpr> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":7476,"byte_end":7484,"line_start":388,"line_end":388,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn NoneExpr(self) -> Option<NoneExpr> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"none_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `NoneExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:388:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn NoneExpr(self) -> Option<NoneExpr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `none_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Expr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9154,"byte_end":9158,"line_start":445,"line_end":445,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Expr(self) -> Option<Expr> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9154,"byte_end":9158,"line_start":445,"line_end":445,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Expr(self) -> Option<Expr> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Expr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:445:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Expr(self) -> Option<Expr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Program` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9306,"byte_end":9313,"line_start":453,"line_end":453,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn Program(self) -> Option<Program> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9306,"byte_end":9313,"line_start":453,"line_end":453,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn Program(self) -> Option<Program> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"program","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Program` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:453:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Program(self) -> Option<Program> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `program`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `TypedIdentifier` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9467,"byte_end":9482,"line_start":461,"line_end":461,"column_start":12,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn TypedIdentifier(self) -> Option<TypedIdentifier> {","highlight_start":12,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9467,"byte_end":9482,"line_start":461,"line_end":461,"column_start":12,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn TypedIdentifier(self) -> Option<TypedIdentifier> {","highlight_start":12,"highlight_end":27}],"label":null,"suggested_replacement":"typed_identifier","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TypedIdentifier` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:461:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TypedIdentifier(self) -> Option<TypedIdentifier> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `typed_identifier`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9652,"byte_end":9656,"line_start":469,"line_end":469,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Type(self) -> Option<Type> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9652,"byte_end":9656,"line_start":469,"line_end":469,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Type(self) -> Option<Type> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:469:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type(self) -> Option<Type> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m(self) -> Option<Type> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `VecExpr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9804,"byte_end":9811,"line_start":477,"line_end":477,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn VecExpr(self) -> Option<Vec<Expr>> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/home/runner/work/bdl/bdl/frontend/src/ast.rs","byte_start":9804,"byte_end":9811,"line_start":477,"line_end":477,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn VecExpr(self) -> Option<Vec<Expr>> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"vec_expr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `VecExpr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/work/bdl/bdl/frontend/src/ast.rs:477:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m477\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn VecExpr(self) -> Option<Vec<Expr>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `vec_expr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"27 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 27 warnings emitted\u001b[0m\n\n"}
